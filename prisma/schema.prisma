// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Auth Models
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  oauth_token       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Affiliate     Affiliate[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Program Specific Models
enum AffiliateStatus {
  INIT
  ACTIVE
  PENDING
  DISABLED
  REJECTED
  DELETED
}

enum GuardianType {
  FATHER
  MOTHER
  OTHER
}

enum SupportedSocials {
  YOUTUBE_CHANNEL
  TWITCH_CHANNEL
  FACEBOOK
  VK
  MIXER
  TWITTER
  INSTAGRAM
  TIKTOK
}

model Affiliate {
  id                       String                    @id @default(auto()) @map("_id") @db.ObjectId
  affiliateStatus          AffiliateStatus
  isLegalAgeAcknowledged   Boolean
  isMinorAgeAcknowledged   Boolean
  minorsGuardianInfo       MinorsGuardianInfo?       @relation(fields: [minorsGuardianInfoId], references: [id])
  minorsGuardianInfoId     String?                   @unique @db.ObjectId
  city                     String
  state                    String
  country                  String
  creatorCode              String                    @unique
  addedSocialMediaAccounts AddedSocialMediaAccount[]
  user                     User                      @relation(fields: [userId], references: [id])
  userId                   String                    @db.ObjectId
}

model MinorsGuardianInfo {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  type      GuardianType
  affiliate Affiliate?
}

model AddedSocialMediaAccount {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  handle      String
  url         String
  type        SupportedSocials
  affiliate   Affiliate        @relation(fields: [affiliateId], references: [id])
  affiliateId String           @db.ObjectId
}
